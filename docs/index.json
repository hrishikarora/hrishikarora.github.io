[{"content":"\u003ch2 id=\"project-overview\"\u003eProject Overview\u003c/h2\u003e\n\u003cp\u003eGenre: Arcade \u003cbr\u003e\nPlatform: PC (Unity)\u003cbr\u003e\nTechnologies Used: Unity, C#, Animator, Physics, Toon Shader\u003cbr\u003e\nDuration: Currently in progress \u003cbr\u003e\u003c/p\u003e\n\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\u003cp\u003eThe Arcade Car Park Game is a vibrant, toon-styled adventure where players take control of a toy car in an interactive car park brimming with excitement. Designed as a playful playground, the game features zones like the Stunt Zone for daring flips and jumps, the Bowling Area where players smash into oversized pins for satisfying chain reactions, and the Amusement Ride Zone filled with whimsical attractions like spinning carousels and mini roller coasters. The Destruction Zone adds an extra layer of chaos, allowing players to knock down structures and trigger spectacular chain reactions. With its colorful visuals, responsive controls, and dynamic physics, the game encourages exploration and experimentation, creating a fun and engaging experience for players of all ages.\u003c/p\u003e\n\u003ch2 id=\"key-features\"\u003eKey Features\u003c/h2\u003e\n\u003cul\u003e\r\n\u003cli\u003e Physics-Based Driving: Realistic car handling with a fun, cartoonish twist, incorporating suspension, acceleration, and deceleration.\u003c/li\u003e\r\n\u003cli\u003e Stunt Area: Perform daring tricks, flips, and jumps.\u003c/li\u003e\r\n\u003cli\u003e Destruction Zone: Smash bricks in a chain reaction, adding excitement to every crash.\u003c/li\u003e\r\n\u003cli\u003e Interactive Bowling Zone: Knock over pins for bonus points and fun.\u003c/li\u003e\r\n\u003cli\u003e Toon Shader Style: A colorful and exaggerated visual style that gives the game a playful and dynamic atmosphere.\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch2 id=\"what-i-learned\"\u003eWhat I Learned\u003c/h2\u003e\n\u003cul\u003e\r\n\u003cli\u003eEnhanced my skills in car physics and vehicle handling, balancing realism and fun.\u003c/li\u003e\r\n\u003cli\u003eGained experience in creating interactive environments where objects respond to player actions, creating dynamic gameplay.\u003c/li\u003e\r\n\u003cli\u003eWorked with toon shaders to achieve a unique visual style, making the game feel vibrant and energetic.\u003c/li\u003e\r\n\u003cli\u003eImproved my ability to design arcade-style gameplay that keeps players engaged with interactive and rewarding mechanics.\u003c/li\u003e\r\n\u003c/ul\u003e","description":"","image":"/images/CarPark.gif","permalink":"https://hrishikarora.github.io/car-arcade/","title":"Car Arcade"},{"content":"\u003ch2 id=\"project-overview\"\u003eProject Overview\u003c/h2\u003e\n\u003cp\u003eGenre: Rhythm-Based Music Game \u003cbr\u003e\nPlatform: Mobile (Android) \u003cbr\u003e\nTechnologies Used: Unity, C#, Audio Synchronization, Mobile Optimization \u003cbr\u003e\n\u003ca href=\"https://play.google.com/store/apps/details?id=com.hungamagamestudio.desibeats\u0026hl=en_US\u0026gl=US\"\r\nstyle=\"color: blue; text-decoration: underline;\"\u003e\nPlay Store Link\n\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\u003cp\u003eFor Desi Beats, a rhythm-based mobile game by Hungama Game Studio, I implemented optimizations that enhanced performance across diverse devices. My contributions also included integrating animations, sound effects, and user-friendly UI elements, and debugging and profiling performance to bolster stability. This work involved close collaboration with the team to refine the overall player experience, particularly focusing on interaction with Indian music tracks.\u003c/p\u003e\n\u003ch2 id=\"key-features\"\u003eKey Features\u003c/h2\u003e\n\u003cul\u003e\r\n\u003cli\u003e\u003cb\u003ePerformance Optimization:\u003c/b\u003e Suggested optimizations for smooth performance across various mobile devices.\u003c/li\u003e\r\n\u003cli\u003e\u003cb\u003eUser Interaction Enhancements:\u003c/b\u003e Assisted in refining UI elements and touch responsiveness for better player feedback.\u003c/li\u003e\r\n\u003cli\u003e\u003cb\u003eAsset Integration:\u003c/b\u003e Integrated animations, sound effects, and user-friendly UI elements for an enhanced player experience.\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch2 id=\"what-i-learned\"\u003eWhat I Learned\u003c/h2\u003e\n\u003cul\u003e\r\n\u003cli\u003eGained experience in optimizing mobile game performance across diverse hardware.\u003c/li\u003e\r\n\u003cli\u003eImproved skills in integrating various game assets (animations, sound, UI) for a cohesive and responsive experience.\u003c/li\u003e\r\n\u003cli\u003eEnhanced understanding of debugging and profiling techniques to ensure game stability and maintain high responsiveness.\u003c/li\u003e\r\n\u003cli\u003eStrengthened abilities in collaborative development to refine user interaction and overall player experience.\u003c/li\u003e\r\n\u003c/ul\u003e\r\n","description":"","image":"/images/projects/desibeat.gif","permalink":"https://hrishikarora.github.io/desi-beat/","title":"Desi Beats"},{"content":"\u003ch2 id=\"project-overview\"\u003eProject Overview\u003c/h2\u003e\n\u003cp\u003eGenre: Rhythm-Based Music Game \u003cbr\u003e\nPlatform: Mobile (Android) \u003cbr\u003e\nTechnologies Used: Unity, C#, Audio Synchronization, Mobile Optimization \u003cbr\u003e\n\u003ca href=\"https://play.google.com/store/apps/details?id=com.hungamagamestudio.sb\u0026hl=en_US\u0026gl=US\"\r\nstyle=\"color: blue; text-decoration: underline;\"\u003e\nPlay Store Link\n\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\u003cp\u003eFor Song Beat, a rhythm-based mobile game by Hungama Game Studio, I implemented optimizations to enhance performance across diverse devices. My contributions also included integrating animations, sound effects, and user-friendly UI elements, and debugging and profiling performance to bolster stability. This work involved close collaboration with the team to refine the overall player experience.\u003c/p\u003e\n\u003ch2 id=\"key-features\"\u003eKey Features\u003c/h2\u003e\n\u003cul\u003e\r\n\u003cli\u003e\u003cb\u003ePerformance Optimization:\u003c/b\u003e Suggested optimizations for smooth performance across various mobile devices.\u003c/li\u003e\r\n\u003cli\u003e\u003cb\u003eUser Interaction Enhancements:\u003c/b\u003e Assisted in refining UI elements and touch responsiveness for better player feedback.\u003c/li\u003e\r\n\u003cli\u003e\u003cb\u003eAsset Integration:\u003c/b\u003e Integrated animations, sound effects, and user-friendly UI elements for an enhanced player experience.\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch2 id=\"what-i-learned\"\u003eWhat I Learned\u003c/h2\u003e\n\u003cul\u003e\r\n\u003cli\u003eGained experience in optimizing mobile game performance across diverse hardware.\u003c/li\u003e\r\n\u003cli\u003eImproved skills in integrating various game assets (animations, sound, UI) for a cohesive experience.\u003c/li\u003e\r\n\u003cli\u003eEnhanced understanding of debugging and profiling techniques to ensure game stability.\u003c/li\u003e\r\n\u003cli\u003eStrengthened abilities in collaborative development to refine user experience.\u003c/li\u003e\r\n\u003c/ul\u003e\r\n","description":"","image":"/images/projects/songbeat.gif","permalink":"https://hrishikarora.github.io/song-beat/","title":"Song Beat"},{"content":"\u003ch2 id=\"project-overview\"\u003eProject Overview\u003c/h2\u003e\n\u003cp\u003eGenre:  Obstacle Course \u003cbr\u003e\nPlatform: PC (Unity)\u003cbr\u003e\nTechnologies Used: Unity, Netcode for GameObjects, Relay, Lobby, C#, Physics, Ragdoll\u003cbr\u003e\nDuration: 3 months \u003cbr\u003e\u003c/p\u003e\n\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\u003cp\u003eCreated a 3-D multiplayer obstacle race course game with active ragdoll using Unity�s Netcode For GameObjects, Relay and Lobby\u003c/p\u003e\n\u003ch2 id=\"key-features\"\u003eKey Features\u003c/h2\u003e\n\u003cul\u003e\r\n\u003cli\u003e Multiplayer: Real-time, synchronous gameplay using Unity�s Netcode for GameObjects, allowing multiple players to race against each other in the same world.\u003c/li\u003e\r\n\u003cli\u003e Obstacle Course: A challenging, dynamic race course filled with interactive obstacles, such as jumping platforms, rotating blades, and moving walls.\u003c/li\u003e\r\n\u003cli\u003e Active Ragdoll System: Players' characters have an active ragdoll system that adds a layer of unpredictability to the game. Collisions with obstacles, falls, and jumps trigger ragdoll physics for more humorous and chaotic gameplay.\u003c/li\u003e\r\n\u003cli\u003e Unity Relay: Players can connect seamlessly through Unity�s Relay service, ensuring smooth and reliable networking even with varying player connection qualities.\u003c/li\u003e\r\n\u003cli\u003e Lobby System: Players can create and join games through a Lobby system, enabling matchmaking and easy navigation to multiplayer sessions.\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch2 id=\"what-i-learned\"\u003eWhat I Learned\u003c/h2\u003e\n\u003cul\u003e\r\n\u003cli\u003eGained hands-on experience using Netcode for GameObjects to implement real-time multiplayer functionality and Relay for serverless matchmaking in Unity.\u003c/li\u003e\r\n\u003cli\u003eLearned how to work with active ragdoll physics and how to apply it to create humorous, dynamic character behavior in response to in-game events.\u003c/li\u003e\r\n\u003cli\u003eDeveloped skills in designing and creating multiplayer game systems, including player lobbies, matchmaking, and synchronization of player actions across the network.\u003c/li\u003e\r\n\u003c/ul\u003e","description":"","image":"/images/projects/DeliriumOdyssey.gif","permalink":"https://hrishikarora.github.io/delirium-odyssey/","title":"Delirium Odyssey"},{"content":"\u003ch2 id=\"project-overview\"\u003eProject Overview\u003c/h2\u003e\n\u003cp\u003eGenre: Action \u003cbr\u003e\nPlatform: PC (Unity)\u003cbr\u003e\nTechnologies Used: Unity, C#, Animator, AI, Physics, State Machine\u003cbr\u003e\nDuration: 2 months \u003cbr\u003e\u003c/p\u003e\n\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\u003cp\u003eCombat System is a robust combat framework designed for third-person RPG games. It features a dynamic combat system, allowing players to engage in fluid melee combat with a variety of abilities such as dodging, countering, and performing finishing moves. The combat system is supported by enemy AI, ensuring that battles feel challenging and responsive. Additionally, the system uses animation events to synchronize character movements with combat actions, making the experience seamless and immersive.\u003c/p\u003e\n\u003ch2 id=\"key-features\"\u003eKey Features\u003c/h2\u003e\n\u003cul\u003e\r\n\u003cli\u003e Player Combat Mechanics: Melee attacks, dodges, counters, and finishers, providing a full range of combat options.\u003c/li\u003e\r\n\u003cli\u003e Enemy AI: AI-controlled enemies with basic behavior patterns like attacking, dodging, and countering.\u003c/li\u003e\r\n\u003cli\u003e State Machine: A state machine structure to manage different combat states (idle, attacking, dodging, etc.) for both the player and enemies.\u003c/li\u003e\r\n\u003cli\u003e Animation Events: Used to trigger specific actions at the right moments in combat, such as attack hits or special move activations.\u003c/li\u003e\r\n\u003cli\u003e Combat Dodging and Countering: Players can dodge incoming attacks and perform counters when timed correctly for a more strategic combat experience.\u003c/li\u003e\r\n\u003cli\u003e Finishers: A finishing move mechanic that triggers when certain conditions are met, providing satisfying gameplay moments.\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch2 id=\"what-i-learned\"\u003eWhat I Learned\u003c/h2\u003e\n\u003cul\u003e\r\n\u003cli\u003eGained experience in designing a combat system that combines character abilities and enemy AI to create dynamic encounters.\u003c/li\u003e\r\n\u003cli\u003eLearned to implement state machines to manage complex behaviors like transitions between different combat states (attacking, defending, dodging).\u003c/li\u003e\r\n\u003cli\u003eWorked with animation events to synchronize gameplay actions with visual feedback, improving player immersion and control.\u003c/li\u003e\r\n\u003cli\u003eDeveloped an understanding of AI behaviors and how to create challenging yet balanced enemy mechanics in an RPG setting.\u003c/li\u003e\r\n\u003c/ul\u003e","description":"","image":"/images/projects/CombatSystem.gif","permalink":"https://hrishikarora.github.io/combat-system/","title":"Combat System"},{"content":"\u003ch2 id=\"project-overview\"\u003eProject Overview\u003c/h2\u003e\n\u003cp\u003ePlatform: PC (Unity)\u003cbr\u003e\nTechnologies Used: Unity, C#, A* Pathfinding, Algorithms\u003cbr\u003e\nDuration: 1 months \u003cbr\u003e\u003c/p\u003e\n\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\u003cp\u003eImplemented my own A* pathfinding algorithm in C#(Unity). Basically A* algorithm will find the shortest distance to destination taking obstacles into account. My mouse click on top right side of the screen sets destination.I am ideating to create a game out of this.\u003c/p\u003e\n\u003ch2 id=\"key-features\"\u003eKey Features\u003c/h2\u003e\n\u003cul\u003e\r\n\u003cli\u003e The algorithm calculates the shortest path on a grid, and the result is visualized by drawing the grid, the open and closed nodes, and the final path on the screen.\u003c/li\u003e\r\n\u003cli\u003e Obstacles can be placed within the grid to simulate real-world obstructions. The A* algorithm dynamically adjusts the path to avoid these obstacles while calculating the shortest route.\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch2 id=\"what-i-learned\"\u003eWhat I Learned\u003c/h2\u003e\n\u003cul\u003e\r\n\u003cli\u003eGained an in-depth understanding of how the A pathfinding algorithm* works, especially in the context of visualizing each step in the process.\u003c/li\u003e\r\n\u003cli\u003eDeveloped the ability to break down complex algorithms into visual feedback, making them easier to understand and follow.\u003c/li\u003e\r\n\u003c/ul\u003e","description":"","image":"/images/projects/Astar.gif","permalink":"https://hrishikarora.github.io/astar-pathfinding/","title":"A* Pathfinding Algorithm"}]